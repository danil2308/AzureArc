name: Eve OS Container Image

on:
  push:
    paths:
      - 'gitops/images/eve/**-values.yaml'
    branches:
      - 'develop'
      - 'release'
      - 'main'
  workflow_dispatch:
    inputs:
      tags:
        description: "Specify Tag (optional)"
        required: false
env:
  CONTAINER_REGISTRY_NAME: ghcr.io
  EVE_OS_RELATIVE_LOCATION: gitops/images/eve
  CONTAINER_NAME: eve
jobs:
  build-and-push:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Fetches entire history, so we can analyze commits since last tag.
          fetch-depth: 0
          
      # We need a predictable tag version, so let's serialize the workflows from this point.
      - name: Turnstyle
        if: github.event.inputs.tags || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release' || github.ref == 'refs/heads/develop'
        uses: softprops/turnstyle@v1
        with:
          same-branch-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine next tag
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release'
        id: next_tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: master
          # RELEASE_BRANCHES: main
          PRERELEASE_SUFFIX: prerelease
          DRY_RUN: true

      - name: Determine next tag
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release'
        id: next_tag_dev
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: master
          # RELEASE_BRANCHES: main
          PRERELEASE_SUFFIX: development
          DRY_RUN: true
      
      - id: container-info-prod
        name: container-info-prod
        if: github.ref == 'refs/heads/master'
        run: |
          echo "::set-output name=image_version::$(yq '.image.version' ${{ env.EVE_OS_RELATIVE_LOCATION }}/production-values.yaml)"
          echo "::set-output name=image_repository::$(yq '.image.repository' ${{ env.EVE_OS_RELATIVE_LOCATION }}/production-values.yaml)"
          echo "::set-output name=image_name::$(yq '.image.name' ${{ env.EVE_OS_RELATIVE_LOCATION }}/production-values.yaml)"
      - name: env-mapping
        if: github.ref == 'refs/heads/master'
        run: |
          echo "image_version=${{ steps.container-info-prod.outputs.image_version }}" >> $GITHUB_ENV
          echo "image_repository=${{ steps.container-info-prod.outputs.image_repository }}" >> $GITHUB_ENV
          echo "image_name=${{ steps.container-info-prod.outputs.image_name }}" >> $GITHUB_ENV

      - id: container-info-nonprod
        name: container-info-nonprod
        if: github.ref == 'refs/heads/release'
        run: |
          echo "::set-output name=image_version::$(yq '.image.version' ${{ env.EVE_OS_RELATIVE_LOCATION }}/nonprod-values.yaml)"
          echo "::set-output name=image_repository::$(yq '.image.repository' ${{ env.EVE_OS_RELATIVE_LOCATION }}/nonprod-values.yaml)"
          echo "::set-output name=image_name::$(yq '.image.name' ${{ env.EVE_OS_RELATIVE_LOCATION }}/nonprod-values.yaml)"
      - name: env-mappin
        if: github.ref == 'refs/heads/release'
        run: |
          echo "image_version=${{ steps.container-info-nonprod.outputs.image_version }}" >> $GITHUB_ENV
          echo "image_repository=${{ steps.container-info-nonprod.outputs.image_repository }}" >> $GITHUB_ENV
          echo "image_name=${{ steps.container-info-nonprod.outputs.image_name }}" >> $GITHUB_ENV

      - id: container-info-sandbox
        name: eve-os-info-sandbox
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release'
        run: |
          echo "::set-output name=image_version::$(yq '.image.version' ${{ env.EVE_OS_RELATIVE_LOCATION }}/sandbox-values.yaml)"
          echo "::set-output name=image_repository::$(yq '.image.repository' ${{ env.EVE_OS_RELATIVE_LOCATION }}/sandbox-values.yaml)"
          echo "::set-output name=image_name::$(yq '.image.name' ${{ env.EVE_OS_RELATIVE_LOCATION }}/sandbox-values.yaml)"
      - name: env-mapping
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release'
        run: |
          echo "image_version=${{ steps.container-info-sandbox.outputs.image_version }}" >> $GITHUB_ENV
          echo "image_repository=${{ steps.container-info-sandbox.outputs.image_repository }}" >> $GITHUB_ENV
          echo "image_name=${{ steps.container-info-sandbox.outputs.image_name }}" >> $GITHUB_ENV

      # Pull the EVE-OS Docker image for sandbox
      - name: pull the Docker image for sandbox
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release'
        run: |
          docker pull ${{ env.image_repository }}/${{ env.image_name }}:${{ env.image_version }}

      # Pull the EVE-OS Docker image for pre-release(nonprod).
      - name: Build the Docker image for pre-release
        if: github.ref == 'refs/heads/release'
        run: |
          docker pull ${{ env.image_repository }}/${{ env.image_name }}:${{ env.image_version }}

      # Pull the EVE-OS Docker image for release(production).
      - name: Build the Docker image for release.
        if: github.ref == 'refs/heads/master'
        run: |
          docker pull ${{ env.image_repository }}/${{ env.image_name }}:${{ env.image_version }}

      # If the branch has an environment, then we're creating a release...
      # We need a predictable tag version, so let's serialize the workflows from this point.
      - uses: ./.github/workflows/common-outputs.yaml
        if: github.event.inputs.tags || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release' || github.ref == 'refs/heads/develop'
        id: common

      - name: Re-tag and push the Docker image
        if: github.event.inputs.tags || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release' || github.ref == 'refs/heads/develop'
        run: |
          docker tag ${{ env.image_repository }}/${{ env.image_name }}:${{ env.image_version }} ${DOCKER_TAG}-${{ env.CONTAINER_NAME }}:${BUILD_VERSION}
          docker push ${DOCKER_TAG}-${{ env.CONTAINER_NAME }}:${BUILD_VERSION}
        env:
          DOCKER_TAG: ${{ steps.common.outputs.container-registry-docker-tag }}
          BUILD_VERSION: ${{ github.event.inputs.tags || steps.next_tag.outputs.new_tag || steps.next_tag_dev.outputs.new_tag }}
